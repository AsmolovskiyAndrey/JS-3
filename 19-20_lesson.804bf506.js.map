{"mappings":";;AAgEK,IAADA,EAAQC,GAAYC,SAASC,cAAcF,GAC3CG,EAAc,EAClB,SAASC,IACLC,MAAM,kDAAkDF,KACnDG,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFC,QAAQC,IAAI,iCAA0DR,GAC9C,MAAlBS,EAASH,EAAKI,QAAQC,KAAI,EAACC,MAACA,EAAKC,GAACA,EAAEC,KAAEA,EAAIC,OAAEA,EAAMC,QAAEA,EAAOC,OAAEA,EAAMC,SAAEA,EAAQC,QAAEA,KAC5E,6DAEMP,gDACSC,gDACIC,oDACIC,sDACEC,oDACFC,wDACIC,EAASJ,8DACNK,uCAGpCC,KAAK,IACRxB,EAAM,aAAayB,mBAAmB,YAAaZ,GACnDT,GAAa,G,CAIzBJ,EAAM,aAAa0B,iBAAiB,QAASrB,GAE7CsB,OAAOD,iBAAiB,UAAU,KAC9B,MAAME,aAACA,EAAYC,UAAEA,EAASC,aAAEA,GAAgB5B,SAAS6B,gBAItDF,IAAcD,EAAeE,IAC5BnB,QAAQC,IAAI,YACJP,I,IAIA,IAAI2B,SAAQ,CAACC,EAASC,KAClC,IAAIC,EAASC,KAAKC,SAAW,GACjCC,YAAW,KACJH,EACCF,EAAQ,aAERC,EAAO,sBAAsB,GAEnC,IAAK,IACJ3B,MAAKG,GAAQC,QAAQC,IAAIF,KACvB6B,OAAMC,GAAS7B,QAAQC,IAAI4B,KAG5BlC,MAAM,sCACDC,MAAKC,IAEQ,GADVG,QAAQC,IAAI,iBAA4BJ,IACpCA,EAASiC,GACT,MAAM,IAAIC,MAAMlC,EAASmC,YAE7B,OAAOnC,CAAQ,IAElBD,MAAKG,GAAQA,EAAKD,SAClBF,MAAKG,GAAOC,QAAQC,IAAI,iBAA4BF,KAC1C6B,OAAJC,GAAS7B,QAAQC,IAAI,oBAAqB4B","sources":["src/js/01.js"],"sourcesContent":["//! ============  Протокол HTTP =========================\n// ----- ПЛАН УРОКУ\n// 1. Що таке HTTP? Навіщо він потрібен?\n// 2. HTTP vs HTTPS\n// 3. REST API\n// 4. HTTP Methods та формати запитів\n// 5. Види API (публічні та не публічні)\n// 6. Параметри запитів (class URLSearchParams)\n\n\n// HTTP - hypertext transfer protocol\n// HTTPS - hypertext transfer protocol secured\n\n// https://restcountries.com/v3.1/all\n// https://192.168.2.100:52616/disk:c/user/documents/api.txt\n\n// 0. КЛІЄНТ ПОЧАВ ЧЕКАТИ\n// 1. Браузер починає шукати найближчий ДНС сервер.\n// 2. Встановлює з'єднання з сервером.\n// 3. 192.168.2.100:52616\n// 4. Повертаємся до клієнта з відповідю\n// 5. Браузер отримує відповідь яку нам надав сервер\n// 6. Браузер парсить відповідь для відображення клієнту\n// 7. КЛІЄНТ ЗАВЕРШИВ ЧЕКАТИ\n\n// REST API\n// API - інтерфейс для взаємодії між програмними компонентами.\n// REST - стиль бекенд архітектури. Він описує як розприділяються дані і куди вони адресуються.\n// REST API - бекенд архітектура яка побудована на стандартах REST. Прослойка між клієнтом і сервером.\n\n// ФОРМАТ REST API запиту\n// 1. HTTP метод - POST, GET, PUT, PATCH, DELETE\n// 2. HTTP заголовок - службова інформація про клієнт для бекенду.\n// 3. Шлях - звичайний адрес серверу куди звертаємось\n// 4. Тіло запиту - дані які передаємо на сервер.\n\n\n// API TYPES:\n// private - вимагають ідентифікацію. Потрібен ключ доступу\n// public - пофіг на все. просто так з вами спілкуються.\n\n\n// function getData(){\n//     fetch('https://restcountries.com/v3.1/all')\n//         .then(response => response.json())\n//         .then(data => console.log(data))\n    \n//     fetch('https://rickandmortyapi.com/api/character')\n//         .then(response => response.json())\n//         .then(data => console.log(data))\n// }\n// getData()\n\n//todo ´´´´´´´´´´´´´´´´´ Репета практика ==============================\n// function getPok() {\n//     fetch('https://pokeapi.co/api/v2/pokemon')\n//         .then(responce => responce.json())\n//     .then(data => console.log(data))\n// }\n\n// getPok()\n\n//! ===================== \"2-й урок\" ==========================================\n\nlet getEl = selector => document.querySelector(selector)\nlet pageCounter = 1\nfunction getData(){\n    fetch(`https://rickandmortyapi.com/api/character?page=${pageCounter}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log('Я завантажив сторінку номер - ', pageCounter)\n            const markup = data.results.map(({image,id, name, status, species, gender, location, created}) => {\n              return `\n            <li class=\"item\">\n                <img src=${image} alt=\"\">\n                <p class=\"id\">ID: ${id}</p>\n                <p class=\"name\">NAME: ${name}</p>\n                <p class=\"status\">STATUS: ${status}</p>\n                <p class=\"species\">SPECIES: ${species}</p>\n                <p class=\"gender\">GENDER: ${gender}</p>\n                <p class=\"location\">LOCATION: ${location.name}</p>\n                <p class=\"createdAt\">Created At: ${created}</p>\n        </li>\n            `\n            }).join('')\n            getEl('.itemList').insertAdjacentHTML('beforeend', markup)\n            pageCounter++\n        })\n}\n\ngetEl('.load_btn').addEventListener('click', getData)\n\nwindow.addEventListener('scroll', () =>{\n    const {scrollHeight, scrollTop, clientHeight} = document.documentElement\n    // console.log(scrollTop) // Висота від верху документа в пх\n    // console.log(scrollHeight) // Довжина всього документа\n    // console.log(clientHeight) // Висота вьюпорта користувача\n    if(scrollTop === scrollHeight - clientHeight){\n        console.log('ЗАГРУЗКА')\n        getData()\n    }\n})\n\nconst promise = new Promise((resolve, reject)=>{\n    let number = Math.random() > .5\nsetTimeout(()=>{\n    if(number){\n        resolve('123123123')\n    }else{\n        reject('ERROR 5 LETTER WORD')\n    }\n},5000)\n}).then(data => console.log(data))\n    .catch(error => console.log(error))\n\nfunction test(){\n    fetch('https://restcountries.com/v3.1/all')\n        .then(response => {\n            console.log('Я ВИКОНАВСЯ ->', response)\n            if(!response.ok){\n                throw new Error(response.statusText)\n            }\n            return response\n        })\n        .then(data => data.json())\n        .then(data=> console.log('Я ВИКОНАВСЯ ->', data))\n        .catch(error => console.log('Я НЕ ВИКОНАВСЯ ->', error))\n}\ntest()"],"names":["$3ccdbd05c2326402$var$getEl","selector","document","querySelector","$3ccdbd05c2326402$var$pageCounter","$3ccdbd05c2326402$var$getData","fetch","then","response","json","data","console","log","markup","results","map","image","id","name","status","species","gender","location","created","join","insertAdjacentHTML","addEventListener","window","scrollHeight","scrollTop","clientHeight","documentElement","Promise","resolve","reject","number","Math","random","setTimeout","catch","error","ok","Error","statusText"],"version":3,"file":"19-20_lesson.804bf506.js.map"}